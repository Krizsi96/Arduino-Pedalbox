<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="928px" preserveAspectRatio="none" style="width:188px;height:928px;background:#0D1117;" version="1.1" viewBox="0 0 188 928" width="188px" zoomAndPan="magnify"><defs/><g><!--MD5=[0e770a5826b894b8746f65a5ff995c24]
class Signal--><g id="elem_Signal"><rect codeLine="4" fill="#2E2E2E" height="148.9492" id="Signal" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.5;" width="147" x="20.5" y="376"/><ellipse cx="73" cy="389" fill="#ADD1B2" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><path d="M73.6406,393.1563 Q72.75,393.1563 71.9922,392.8906 Q71.2344,392.625 70.6875,392.1094 Q70.1563,391.5938 69.8516,390.8125 Q69.5469,390.0313 69.5469,389.0156 Q69.5469,388.0625 69.8359,387.2891 Q70.125,386.5156 70.6719,385.9531 Q71.1875,385.4219 71.9609,385.1328 Q72.7344,384.8438 73.6406,384.8438 Q74.1406,384.8438 74.5469,384.8984 Q74.9531,384.9531 75.2969,385.0469 Q75.6563,385.1563 75.9531,385.2813 Q76.25,385.4063 76.4688,385.5156 L76.4688,387.4531 L76.2344,387.4531 Q76.0781,387.3281 75.8516,387.1484 Q75.625,386.9688 75.3281,386.7969 Q75.0313,386.625 74.6875,386.5078 Q74.3438,386.3906 73.9531,386.3906 Q73.5156,386.3906 73.125,386.5234 Q72.7344,386.6563 72.4063,386.9844 Q72.0938,387.2813 71.8984,387.7891 Q71.7031,388.2969 71.7031,389.0156 Q71.7031,389.7656 71.9141,390.2734 Q72.125,390.7813 72.4375,391.0625 Q72.7656,391.3594 73.1719,391.4844 Q73.5781,391.6094 73.9688,391.6094 Q74.3438,391.6094 74.7109,391.5 Q75.0781,391.3906 75.3906,391.1875 Q75.6563,391.0469 75.8828,390.8672 Q76.1094,390.6875 76.25,390.5625 L76.4688,390.5625 L76.4688,392.4688 Q76.1719,392.6094 75.8984,392.7266 Q75.625,392.8438 75.3125,392.9219 Q74.9219,393.0313 74.5781,393.0938 Q74.2344,393.1563 73.6406,393.1563 Z " fill="#000000"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="35" x="89" y="393.3748">Signal</text><line style="stroke:#000000;stroke-width:0.5;" x1="21.5" x2="166.5" y1="402" y2="402"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="28.5" y="410.6843"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="96" x="37.5" y="417.0591">int signal_value_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="28.5" y="424.053"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="101" x="37.5" y="430.4277">char signal_type_</text><line style="stroke:#000000;stroke-width:0.5;" x1="21.5" x2="166.5" y1="436.7373" y2="436.7373"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="28.5" y="445.4216"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="124" x="37.5" y="451.7964">int ReadSignalValue()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="28.5" y="458.7903"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="94" x="37.5" y="465.165">bool InitHX711()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="28.5" y="472.1589"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="104" x="37.5" y="478.5337">long ReadHX711()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="28.5" y="485.5276"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="113" x="37.5" y="491.9023">void RequestError()</text><ellipse cx="31.5" cy="501.8962" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="124" x="37.5" y="505.271">int get_signal_value()</text><ellipse cx="31.5" cy="515.2649" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="92" x="37.5" y="518.6396">bool InitSignal()</text></g><!--MD5=[4f3a89ab1ed1784e34741af259b8d239]
class HX711--><g id="elem_HX711"><rect codeLine="16" fill="#2E2E2E" height="336.1104" id="HX711" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.5;" width="174" x="7" y="585"/><ellipse cx="72" cy="598" fill="#ADD1B2" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><path d="M72.6406,602.1563 Q71.75,602.1563 70.9922,601.8906 Q70.2344,601.625 69.6875,601.1094 Q69.1563,600.5938 68.8516,599.8125 Q68.5469,599.0313 68.5469,598.0156 Q68.5469,597.0625 68.8359,596.2891 Q69.125,595.5156 69.6719,594.9531 Q70.1875,594.4219 70.9609,594.1328 Q71.7344,593.8438 72.6406,593.8438 Q73.1406,593.8438 73.5469,593.8984 Q73.9531,593.9531 74.2969,594.0469 Q74.6563,594.1563 74.9531,594.2813 Q75.25,594.4063 75.4688,594.5156 L75.4688,596.4531 L75.2344,596.4531 Q75.0781,596.3281 74.8516,596.1484 Q74.625,595.9688 74.3281,595.7969 Q74.0313,595.625 73.6875,595.5078 Q73.3438,595.3906 72.9531,595.3906 Q72.5156,595.3906 72.125,595.5234 Q71.7344,595.6563 71.4063,595.9844 Q71.0938,596.2813 70.8984,596.7891 Q70.7031,597.2969 70.7031,598.0156 Q70.7031,598.7656 70.9141,599.2734 Q71.125,599.7813 71.4375,600.0625 Q71.7656,600.3594 72.1719,600.4844 Q72.5781,600.6094 72.9688,600.6094 Q73.3438,600.6094 73.7109,600.5 Q74.0781,600.3906 74.3906,600.1875 Q74.6563,600.0469 74.8828,599.8672 Q75.1094,599.6875 75.25,599.5625 L75.4688,599.5625 L75.4688,601.4688 Q75.1719,601.6094 74.8984,601.7266 Q74.625,601.8438 74.3125,601.9219 Q73.9219,602.0313 73.5781,602.0938 Q73.2344,602.1563 72.6406,602.1563 Z " fill="#000000"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="37" x="88" y="602.3748">HX711</text><line style="stroke:#000000;stroke-width:0.5;" x1="8" x2="180" y1="611" y2="611"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="619.6843"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="77" x="24" y="626.0591">byte PD_SCK</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="633.053"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="62" x="24" y="639.4277">byte DOUT</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="646.4216"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="59" x="24" y="652.7964">byte GAIN</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="659.7903"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="71" x="24" y="666.165">long OFFSET</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="673.1589"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="67" x="24" y="679.5337">float SCALE</text><line style="stroke:#000000;stroke-width:0.5;" x1="8" x2="180" y1="685.8433" y2="685.8433"/><ellipse cx="18" cy="697.5276" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="69" x="24" y="700.9023">void begin()</text><ellipse cx="18" cy="710.8962" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="87" x="24" y="714.271">bool is_ready()</text><ellipse cx="18" cy="724.2649" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="101" x="24" y="727.6396">void wait_ready()</text><ellipse cx="18" cy="737.6335" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="136" x="24" y="741.0083">bool wait_ready_retry()</text><ellipse cx="18" cy="751.0022" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="151" x="24" y="754.377">bool wait_ready_timeout()</text><ellipse cx="18" cy="764.3708" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="86" x="24" y="767.7456">void set_gain()</text><ellipse cx="18" cy="777.7395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="64" x="24" y="781.1143">long read()</text><ellipse cx="18" cy="791.1082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="118" x="24" y="794.4829">long read_average()</text><ellipse cx="18" cy="804.4768" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="108" x="24" y="807.8516">double get_value()</text><ellipse cx="18" cy="817.8455" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="91" x="24" y="821.2202">float get_units()</text><ellipse cx="18" cy="831.2141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="61" x="24" y="834.5889">void tare()</text><ellipse cx="18" cy="844.5828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="91" x="24" y="847.9575">void set_scale()</text><ellipse cx="18" cy="857.9514" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="93" x="24" y="861.3262">float get_scale()</text><ellipse cx="18" cy="871.3201" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="94" x="24" y="874.6948">void set_offset()</text><ellipse cx="18" cy="884.6887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="95" x="24" y="888.0635">long get_offset()</text><ellipse cx="18" cy="898.0574" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="110" x="24" y="901.4321">void power_down()</text><ellipse cx="18" cy="911.426" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="94" x="24" y="914.8008">void power_up()</text></g><!--MD5=[a0e49d5cbfea2fa137e5d965672c3e3f]
class Arduino--><g id="elem_Arduino"><rect codeLine="42" fill="#2E2E2E" height="309.373" id="Arduino" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:0.5;" width="132" x="28" y="7"/><ellipse cx="68.5" cy="20" fill="#B4A7E5" rx="8" ry="8" style="stroke:#181818;stroke-width:1.0;"/><path d="M70.8438,24 L66.1563,24 L66.1563,22.5781 L67.4688,22.5781 L67.4688,17.4219 L66.1563,17.4219 L66.1563,16 L70.8438,16 L70.8438,17.4219 L69.5313,17.4219 L69.5313,22.5781 L70.8438,22.5781 L70.8438,24 Z " fill="#000000"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="44" x="84.5" y="24.3748">Arduino</text><line style="stroke:#000000;stroke-width:0.5;" x1="29" x2="159" y1="33" y2="33"/><line style="stroke:#000000;stroke-width:0.5;" x1="29" x2="159" y1="41" y2="41"/><ellipse cx="39" cy="52.6843" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="61" x="45" y="56.0591">available()</text><ellipse cx="39" cy="66.053" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="109" x="45" y="69.4277">availableForWrite()</text><ellipse cx="39" cy="79.4216" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="41" x="45" y="82.7964">begin()</text><ellipse cx="39" cy="92.7903" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="31" x="45" y="96.165">end()</text><ellipse cx="39" cy="106.1589" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="31" x="45" y="109.5337">find()</text><ellipse cx="39" cy="119.5276" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="56" x="45" y="122.9023">findUntil()</text><ellipse cx="39" cy="132.8962" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="37" x="45" y="136.271">flush()</text><ellipse cx="39" cy="146.2649" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="69" x="45" y="149.6396">parseFloat()</text><ellipse cx="39" cy="159.6335" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="58" x="45" y="163.0083">parseInt()</text><ellipse cx="39" cy="173.0022" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="38" x="45" y="176.377">peek()</text><ellipse cx="39" cy="186.3708" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="36" x="45" y="189.7456">print()</text><ellipse cx="39" cy="199.7395" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="46" x="45" y="203.1143">println()</text><ellipse cx="39" cy="213.1082" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="36" x="45" y="216.4829">read()</text><ellipse cx="39" cy="226.4768" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="68" x="45" y="229.8516">readBytes()</text><ellipse cx="39" cy="239.8455" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="93" x="45" y="243.2202">readBytesUntil()</text><ellipse cx="39" cy="253.2141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="70" x="45" y="256.5889">readString()</text><ellipse cx="39" cy="266.5828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="95" x="45" y="269.9575">readStringUntil()</text><ellipse cx="39" cy="279.9514" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="73" x="45" y="283.3262">setTimeout()</text><ellipse cx="39" cy="293.3201" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="38" x="45" y="296.6948">write()</text><ellipse cx="39" cy="306.6887" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#AAAAAA" font-family="Verdana" font-size="11" lengthAdjust="spacing" textLength="73" x="45" y="310.0635">serialEvent()</text></g><!--MD5=[b7563b7f518cc911fa667a2c7d92114f]
link Arduino to Signal--><g id="link_Arduino_Signal"><path codeLine="65" d="M94,316.08 C94,336.87 94,357.38 94,375.85 " fill="none" id="Arduino-Signal" style="stroke:#FFFFFF;stroke-width:1.0;"/></g><!--MD5=[3fe117484b89b113a7b3c33058bb854c]
link Signal to HX711--><g id="link_Signal_HX711"><path codeLine="66" d="M94,525.01 C94,541.85 94,560.44 94,579.52 " fill="none" id="Signal-to-HX711" style="stroke:#FFFFFF;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#FFFFFF" points="94,584.91,98,575.91,94,579.91,90,575.91,94,584.91" style="stroke:#FFFFFF;stroke-width:1.0;"/></g><!--MD5=[7a08ba289f57b5edff37c609834a6d0c]
@startuml Class Diagram
  !define DARKSTYLE
  !include style.puml

  class Signal {
    -int signal_value_
    -char signal_type_

    -int ReadSignalValue()
    -bool InitHX711()
    -long ReadHX711()
    -void RequestError()
    +int get_signal_value()
    +bool InitSignal()
  }

  class HX711 {
    -byte PD_SCK
    -byte DOUT
    -byte GAIN
    -long OFFSET
    -float SCALE

    +void begin()
    +bool is_ready()
    +void wait_ready()
    +bool wait_ready_retry()
    +bool wait_ready_timeout()
    +void set_gain()
    +long read()
    +long read_average()
    +double get_value()
    +float get_units()
    +void tare()
    +void set_scale()
    +float get_scale()
    +void set_offset()
    +long get_offset()
    +void power_down()
    +void power_up()
  }

  interface Arduino {
    +available()
    +availableForWrite()
    +begin()
    +end()
    +find()
    +findUntil()
    +flush()
    +parseFloat()
    +parseInt()
    +peek()
    +print()
    +println()
    +read()
    +readBytes()
    +readBytesUntil()
    +readString()
    +readStringUntil()
    +setTimeout()
    +write()
    +serialEvent()
  }

  Arduino - - Signal
  Signal ..> HX711
@enduml

@startuml Class Diagram












skinparam backgroundColor 0d1117







skinparam circledCharacter {
  radius 8
  fontSize 11
  fontName Verdana
}

skinparam class {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11

  attributeFontColor aaa
  attributeFontSize 11
  attributeIconSize 11
}


skinparam actor {
    backgroundColor $ACCENT
  borderColor $ACCENTDARK
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam participant {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam collections {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam SequenceBox{
    backgroundColor 575757
  borderColor 767676
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}


skinparam interface {
    backgroundColor $ACCENT
  borderColor $ACCENTDARK
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam component {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam node {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam database {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam queue {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}


skinparam usecase {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11
}

skinparam activity {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11
}

skinparam sequence {
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11

  lifeLineBorderColor $ACCENT
  lifeLineBackgroundColor 575757
}

skinparam boundary {
    backgroundColor $ACCENT
  borderColor $ACCENTDARK
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam control {
    backgroundColor $ACCENT
  borderColor $ACCENTDARK
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam entity {
    backgroundColor $ACCENT
  borderColor $ACCENTDARK
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}


skinparam state {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11
  startColor $ACCENT
  endColor $ACCENTDARK
}


skinparam object {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11
}


skinparam note {
    backgroundColor $ACCENT
  borderColor $ACCENTDARK
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam cloud {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
    arrowColor fff
  arrowFontName Verdana
  arrowFontColor bbb
  arrowFontSize 11
}

skinparam rectangle {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}

skinparam storage {
    backgroundColor 2e2e2e
  borderColor 000000
    fontColor fff
  fontName Verdana
  fontSize 11
  stereotypeFontColor aaa
  stereotypeFontSize 11
}


  class Signal {
    -int signal_value_
    -char signal_type_

    -int ReadSignalValue()
    -bool InitHX711()
    -long ReadHX711()
    -void RequestError()
    +int get_signal_value()
    +bool InitSignal()
  }

  class HX711 {
    -byte PD_SCK
    -byte DOUT
    -byte GAIN
    -long OFFSET
    -float SCALE

    +void begin()
    +bool is_ready()
    +void wait_ready()
    +bool wait_ready_retry()
    +bool wait_ready_timeout()
    +void set_gain()
    +long read()
    +long read_average()
    +double get_value()
    +float get_units()
    +void tare()
    +void set_scale()
    +float get_scale()
    +void set_offset()
    +long get_offset()
    +void power_down()
    +void power_up()
  }

  interface Arduino {
    +available()
    +availableForWrite()
    +begin()
    +end()
    +find()
    +findUntil()
    +flush()
    +parseFloat()
    +parseInt()
    +peek()
    +print()
    +println()
    +read()
    +readBytes()
    +readBytesUntil()
    +readString()
    +readStringUntil()
    +setTimeout()
    +write()
    +serialEvent()
  }

  Arduino - - Signal
  Signal ..> HX711
@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>